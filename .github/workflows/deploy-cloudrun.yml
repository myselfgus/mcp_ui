name: Deploy Cloud Run (fast-agent)

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Optional image tag override"
        required: false
      deploy:
        description: "Set to 'yes' to actually deploy"
        required: false
        default: 'yes'
  push:
    tags:
      - 'fast-agent-v*.*.*'

permissions:
  contents: read
  id-token: write

env:
  REGION: us-central1
  SERVICE_NAME: fast-agent
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REPO_NAME: fast-agent
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker auth
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build image
        working-directory: third_party/fast-agent
        run: |
          TAG=${{ inputs.image_tag || env.IMAGE_TAG }}
          IMAGE=us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:$TAG
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker build -t $IMAGE .

      - name: Push image
        run: docker push $IMAGE

      - name: Deploy to Cloud Run
        if: ${{ (github.event_name == 'push') || (inputs.deploy == 'yes') }}
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image $IMAGE \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 8000 \
            --set-env-vars GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT }},GOOGLE_CLOUD_LOCATION=${{ secrets.GOOGLE_CLOUD_LOCATION }}

      - name: Show service URL
        if: always()
        run: gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format 'value(status.url)'
